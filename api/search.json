[{"id":"fff9aae5a812fe41e3ebcbcea4ff57c8","title":"nvm安装node","content":"nvm安装​\tnvm是node的版本管理工具，可以安装多个版本的node并切换，直接从官网安装node，进行npm install时经常出错（需要sudo），所以用nvm进行安装node\n\n卸载旧版本node、npm\nshellbrew uninstall node\n\nsudo rm -rf /usr/local/&#123;bin/&#123;node,npm&#125;,lib/node_modules/npm,lib/node,share/man/*/node.*&#125;\n安装\nshellgit clone https://github.com/nvm-sh/nvm.git\n配置环境\nshell# vim ~/.zshrc\n加上以下内容 \ntxtexport NVM_DIR=&quot;$HOME/.nvm&quot;\n\n[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm\n\n[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion\nshellsource ~/.zshrc\nnvm -v\n设置淘宝镜像\nshellNVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\n安装node\nshell#查看node可安装版本\nnvm ls-remote\n\n#安装v18.18.2 版本，也可以选你需要的版本\nnvm installl v18.18.2 \n\n#切换，可以切换其他版本\nnvm use v18.18.2 \n\n\nnode配置\n设置镜像\nshell# 这个地址好像过期了，配置后不起加速作用\n# npm config set registry https://registry.npm.taobao.org/\n#用下面这个\nnpm config set registry https://registry.npmmirror.com/\n\n","slug":"nvm安装node","date":"2023-10-20T13:00:38.639Z","categories_index":"软件安装","tags_index":"nvm,node","author_index":"tomarsqiu"},{"id":"059268b56602cb55de9c68eb7a3eddc3","title":"hexo个人博客搭建","content":"hexo个人博客搭建​\t前提需要安装node，建议用nvm安装\n\n设置淘宝镜像（或者开vpn)\nshellnpm config set registry https://registry.npmmirror.com/\n\n安装hexo\nshellnpm install  hexo-cli\n创建一个博客目录，并初始化，如果没有设置淘宝镜像或者vpn，这一步可能会失败，最好不要使用sudo初始化，要不然后续每次操作需要sudo提权很繁琐\nshellmkdir Blog\ncd Blog\nhexo init\n启动，此时可以访问了，如果想要终止ctrl+c\nshellhexo s\n创建博客，可以用typora写markdown文件，然后放进source&#x2F;_posts目录下\n\n配置主题：（https://aurora.tridiamond.tech/en/guide/getting-started.html）\n\n部署到github上，不建议使用gitee，需要手持身份证之类的比较麻烦\nshell#在github上创建一个仓库，项目名： 你的github用户名.github.io\n#安装插件\nnpm install hexo-deployer-git --save\n\n#本地配置文件修改\nvim _config.yml\n\n#修改内容如下\ndeploy:\n  type: git\n  repo: https://github.com/tomarsqiu/tomarsqiu.github.io.git\n  branch: master\n\n#推送命令\nhexo d\n\n#需要token登录，如果没有，创建一个，在github的setting \n#-&gt;developer setting \n#-&gt;personal access token\n#-&gt;tokens(classic)\n#-&gt;generate new token\n#note里面是用来提示你这token用来做什么，可以自己随便填，下面的选项记得全部钩上，要不然到时候登录不了\n#此时产生一个token，记得复制保存，以后见不到了\n\n输入你的用户名和token进行推送\n\n输入https:&#x2F;&#x2F;你的github用户名.github.io&#x2F;进行访问，访问前记得进github刷新一下（如果你推送了的话）\n\n绑定域名，阿里云或者腾讯云购买一个域名，注册，备案\n\n\n","slug":"hexo个人博客搭建","date":"2023-10-20T09:26:03.497Z","categories_index":"软件安装","tags_index":"aurora,hero","author_index":"tomarsqiu"},{"id":"91ae628334b56d49e8492c0230e20335","title":"centos静态ip","content":"Centos9 设置静态ip\n相对以前centos7之类的，9版本的默认的网络是NetworkManager，网络配置也有较大改变\n\n进入配置文件所在目录，用vim进行编辑\nshellcd /etc/NetworkManager/system-connections\n\nvim  ens160.nmconnection\n\n按i进行编辑，编辑完之后按esc，再按 :wq(注意冒号)\ntxt[connection]\nid=ens160\nuuid=ddc44f66-1f11-38d8-8d3b-1522212d1018\ntype=ethernet\nautoconnect-priority=-999\ninterface-name=ens160\ntimestamp=1696745971\n\n[ethernet]\n\n[ipv4]\n#method=auto\nmethod=manual\naddress1=172.16.18.129/24,172.16.18.2\ndns=114.114.114.114\n\n[ipv6]\naddr-gen-mode=eui64\nmethod=auto\n\n[proxy]Tips: 主要是[ipv4]编辑\n\n不要有多行空行，dns下面尤其注意，注释最好也删干净，防止不合法空格\nmethod设置为manual表示手动\naddress1等号后面第一个就是你的静态ip，可以使用原来分配的，斜杆后的24表示掩码255.255.255.0。后面的ip表示网关，前3位与静态ip一样，最后一位最好取2，取1的时候可能出现ping不通外网\ndns可以用114.114.114.144或者8.8.8.8。如果有多个，用分号连接\n\n\nshellnmcli n #查看networkmanager启动与否\nnmcli c reload #重新加载配置文件，c是connection的缩写，connect，co之类的替代都可以\nnmcli c up ens160 #启动你设置的网卡ens160\nnmcli d # 查看网卡状态，也可以用ifconfig\n\n存在的问题：\n\n如果出现：未知的连接 “ens160”,十有八九是配置文件存在语法和拼写错误\n网卡能启动，但主机连接不上虚拟机，大概率是网关设置错误，比如最后一位设置成1.\n配置前自动ip能访问，静态ip不能访问，只有配置文件存在问题的可能性，不需要去设置防火墙之类的\n\n","slug":"Centos9 设置静态ip","date":"2023-10-09T19:26:21.653Z","categories_index":"linux","tags_index":"centos,network","author_index":"tomarsqiu"},{"id":"30203d9cdc7458d307e82acc7bbcb96a","title":"docker安装","content":"Docker教程安装\n进入官网\n\n搜索框搜索对应的操作系统按指导下载即可\n\n以下为centos系统下的安装\nshell\n# 卸载旧版本docker\nsudo yum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n# 安装yum-util工具包和设置repository\nsudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n# 安装最新版本docker，你也可以指定版本（官网文档有，此条命令右侧）\nsudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# 启动docker，关闭stop，重启restart 替换下行的start即可\nsudo systemctl start docker\n\n# 验证安装成功\nsudo docker run hello-world\n\n# 设置开机自启动\nsystemctl enable docker\n\n镜像加速。第一个是官方国内的（macos推荐），第二个是阿里云的\nshellsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;\n&#123;\n  &quot;registry-mirrors&quot;: [\n  &quot;https://registry.docker-cn.com&quot;,\n  &quot;https://oonznso4.mirror.aliyuncs.com&quot;]\n&#125;\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n基本指令菜鸟教程\n Docker2022.html \n基本容器的安装（mac版）mysql\n创建目录\n\n编辑my.cnf\ntxt[mysqld]\n\n\n创建容器\nshelldocker run -p 3307:3306 --name mysql \\\n-v /Users/ming/mydata/mysql/log:/var/log \\\n-v /Users/ming/mydata/mysql/data:/var/lib/mysql \\\n-v /Users/ming/mydata/mysql/conf/my.cnf:/etc/my.cnf \\\n-e MYSQL_ROOT_PASSWORD=Dd112211. \\\n-d mysql/mysql-server\n\n","slug":"docker教程","date":"2023-10-08T13:31:06.815Z","categories_index":"软件安装","tags_index":"docker","author_index":"tomarsqiu"}]